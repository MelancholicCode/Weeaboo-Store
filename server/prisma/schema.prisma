generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int             @id @default(autoincrement())
  avatar        String
  name          String
  surname       String
  email         String          @unique
  password      String
  address       String
  country       Country         @relation(fields: [countryId], references: [id])
  countryId     Int
  language      Language        @relation(fields: [languageId], references: [id])
  languageId    Int
  Cart          Cart?
  Review        Review[]
  RolesOnUsers  RolesOnUsers[]
  Favorite      Favorite[]
  PurchasedItem PurchasedItem[]
}

model Cart {
  id     Int     @id @unique @default(autoincrement())
  user   User    @relation(fields: [userId], references: [id])
  userId Int     @unique
  Order  Order[]
}

model Category {
  id            Int             @id @unique @default(autoincrement())
  Product       Product[]
  CategoryTitle CategoryTitle[]
}

model CategoryTitle {
  id         Int      @id @unique @default(autoincrement())
  text       String
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int
  language   Language @relation(fields: [languageId], references: [id])
  languageId Int
}

model Product {
  id            Int            @id @unique @default(autoincrement())
  img           String
  rating        Int
  category      Category       @relation(fields: [categoryId], references: [id])
  categoryId    Int
  Order         Order?
  Favorite      Favorite?
  Price         Price[]
  ProductInfo   ProductInfo?
  PurchasedItem PurchasedItem?
  Review        Review?
}

model ProductInfo {
  id          Int      @id @unique @default(autoincrement())
  title       String
  description String
  product     Product  @relation(fields: [productId], references: [id])
  productId   Int      @unique
  language    Language @relation(fields: [languageId], references: [id])
  languageId  Int
}

model Price {
  id         Int      @id @unique @default(autoincrement())
  value      Int
  product    Product  @relation(fields: [productId], references: [id])
  productId  Int
  currency   Currency @relation(fields: [currencyId], references: [id])
  currencyId Int
}

model PurchasedItem {
  id        Int     @id @unique @default(autoincrement())
  product   Product @relation(fields: [productId], references: [id])
  productId Int     @unique
  user      User    @relation(fields: [userId], references: [id])
  userId    Int
}

model Favorite {
  id        Int     @id @unique @default(autoincrement())
  user      User    @relation(fields: [userId], references: [id])
  userId    Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int     @unique
}

model Review {
  id              Int     @id @unique @default(autoincrement())
  rate            Int
  comment         String
  user            User    @relation(fields: [userId], references: [id])
  userId          Int
  purchasedItem   Product @relation(fields: [purchasedItemId], references: [id])
  purchasedItemId Int     @unique
}

model Order {
  id        Int     @id @unique @default(autoincrement())
  quantity  Int     @default(1)
  cart      Cart    @relation(fields: [cartId], references: [id])
  cartId    Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int     @unique
}

model Role {
  id           Int            @id @default(autoincrement())
  name         String         @unique
  RolesOnUsers RolesOnUsers[]
}

model RolesOnUsers {
  user   User @relation(fields: [userId], references: [id])
  userId Int
  role   Role @relation(fields: [roleId], references: [id])
  roleId Int

  @@id([userId, roleId])
}

model Country {
  id       Int       @id @unique @default(autoincrement())
  name     String
  code     String    @unique
  User     User[]
  Currency Currency?
  Language Language?
}

model Language {
  id            Int             @id @unique @default(autoincrement())
  name          String
  code          String          @unique
  country       Country         @relation(fields: [countryId], references: [id])
  countryId     Int             @unique
  ProductInfo   ProductInfo[]
  User          User[]
  CategoryTitle CategoryTitle[]
}

model Currency {
  id        Int     @id @unique @default(autoincrement())
  code      String  @unique
  symbol    String
  country   Country @relation(fields: [countryId], references: [id])
  countryId Int     @unique
  Price     Price[]
}
